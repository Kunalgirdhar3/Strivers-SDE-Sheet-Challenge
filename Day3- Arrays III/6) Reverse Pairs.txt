import java.util.* ;
import java.io.*; 
import java.util.ArrayList;

public class Solution 
{
    public static int reversePairs(ArrayList<Integer> arr) 
    {
        // Write your code here.
        int n=arr.size();
        return mergeSort(arr,0,n-1);
    }
    private static int mergeSort(ArrayList<Integer> arr, int low, int high){
        if(low>=high) return 0;
        int mid=low+((high-low)/2);
        int ans=mergeSort(arr, low, mid);
        ans+=mergeSort(arr, mid+1, high);
        ans+=merge(arr,low,mid,high);
        return ans;
    }
    private static int merge(ArrayList<Integer> arr, int low, int mid, int high){
        int j=mid+1;
        int cnt=0;
        for(int i=low;i<=mid;i++){
            while(j<=high && arr.get(i)>2*arr.get(j)) j++;
            cnt+=(j-(mid+1));
        }
        List<Integer> li=new ArrayList<>();
        int l=low,r=mid+1;
        while(l<=mid && r<=high){
            if(arr.get(l)<=arr.get(r)){
                li.add(arr.get(l));
                l++;
            }else{
                li.add(arr.get(r));
                r++;
            }
        }
        while(l<=mid){
            li.add(arr.get(l));
            l++;
        }
        while(r<=high){
            li.add(arr.get(r));
            r++;
        }
        for(int i=low;i<=high;i++) arr.set(i, li.get(i-low));
        return cnt;
    }

}