import java.util.* ;
import java.io.*; 
public class Solution {
    public static ArrayList<ArrayList<Integer>> ratInAMaze(int[][] maze, int n) {
        // Write your code here.
        ArrayList<ArrayList<Integer>> ans=new ArrayList<>();
        if(maze[0][0]==0) return ans;
        int[][] path=new int[n][n];
        f(maze,n,path,ans,0,0);
        return ans;
    }
    private static void f(int[][] maze,int n,int[][] path, ArrayList<ArrayList<Integer>> ans, int row, int col){
        path[row][col]=1;
        if(row==n-1 && col==n-1){
            ArrayList<Integer> li=new ArrayList<>();
            for(int i=0;i<n;i++){
                for(int j=0;j<n;j++) li.add(path[i][j]);
            }
            ans.add(li);
            path[row][col]=0;
            return;
        }
        if(isSafe(row+1,col,maze,path)) f(maze,n,path,ans,row+1,col);
        if(isSafe(row-1,col,maze,path)) f(maze,n,path,ans,row-1,col);
        if(isSafe(row,col+1,maze,path)) f(maze,n,path,ans,row,col+1);
        if(isSafe(row,col-1,maze,path)) f(maze,n,path,ans,row,col-1);
        path[row][col]=0;
    }
    private static boolean isSafe(int r, int c, int[][] maze, int[][] path){
        int n=maze.length;
        if(r>=n || c>=n || r<0 || c<0 || maze[r][c]==0 || path[r][c]==1) return false;
        return true;
    }
}