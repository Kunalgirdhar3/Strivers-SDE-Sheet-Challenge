public class Solution {

	public static boolean isItSudoku(int matrix[][]) {

		// Write your code here.
		return f(matrix,0,0);
	}
	private static boolean f(int[][] mat, int row, int col){
		if(row==mat.length) return true;
		int newRow,newCol;
		if(col==mat.length-1){
			newRow=row+1;
			newCol=0;
		}else{
			newRow=row;
			newCol=col+1;
		}
		if(mat[row][col]!=0) return f(mat, newRow, newCol);
		else{
			for(int i=1;i<=9;i++){
				if(isSafe(mat, row, col, i)){
					mat[row][col]=i;
					if(f(mat,newRow,newCol)) return true;
					else mat[row][col]=0;
				}
			}
		}
		return false;
	}
	private static boolean isSafe(int[][] mat, int row, int col, int num){
		for(int i=0;i<9;i++){
			if(mat[i][col]==num) return false;
			if(mat[row][i]==num) return false;
		}
		int rowStart=row-row%3;
		int colStart=col-col%3;
		for(int r=rowStart;r<rowStart+3;r++){
			for(int c=colStart;c<colStart+3;c++){
				if(mat[r][c]==num) return false;
			}
		}
		return true;
	}
}
